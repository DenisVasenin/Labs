{
    "collab_server" : "",
    "contents" : "<html>\n\n<head>\n  <title></title>\n  <meta charset=\"utf-8\">\n</head>\n\n<body>\n\n<!--begin.rcode echo = FALSE\nlibrary(ggplot2)\nend.rcode-->\n\n<h2 text align = \"center\">Лабораторная работа №1.</h2>\n\n<h2 text align = \"center\">Одномерная оптимизация.</h2>\n\n<h4 text align = \"center\">Вариант 17</h4>\n\n<h3>Задание:</h3>\n<p>f(x,y) = x<sup>2</sup> + 10*y<sup>2</sup> - x*y - y\n<br> \nr<sub>0</sub> = (x<sub>0</sub>, y<sub>0</sub>) ;\n<br>\nx<sub>0</sub> = -2 ; y<sub>0</sub> = 2\n<br><br>\nОпределить направление спуска из начальной точки и найти вдоль этого направления \nоптимум функции с точностью меньше, чем e = 0,001.</p>\n\n<h3>Контурный график функции:</h3>\n\n<p>Как видно из графика - минимум находится в районе точки r<sub>1</sub>=(0, 0).\n<br>\nЗа направление спуска возьмем вектор r<sub>0</sub>r<sub>1</sub>.\n</p>\n\n<!--begin.rcode echo=FALSE\n\nx = c(rep(-10:10, 21))\ny = c(rep(-10:10, each = 21))\ndafr = data.frame(x, y)\nf = x^2 + 10 * y^2 - x * y - y\ndafr$z = with(dafr, f)\nx1 = c(-2, 0)\ny1 = c(2, 0)\nggplot() + geom_contour(data = dafr, aes(x = x, y = y, z = z)) + geom_line(aes(x1, y1))\n\nend.rcode-->\n\n<h3>Исходные параметры:</h3>\n\n<!--begin.rcode\n\nr0 = c(-2, 2)                                              # начальная точка вектора\nr1 = c(0, 0)                                               # направляющая точка\ndr = c(r1[1] - r0[1], r1[2] - r0[2])                       # r1 - r0\ne = 0.001                                                  # точность по производной\n\nend.rcode-->\n\n<!--begin.rcode echo=FALSE\n\nr = function(a, r0, dr) {                                  # точка r\n    return(c(r0[1] + a * dr[1], r0[2] + a * dr[2]))\n}\n\nh = function(a, r0, dr) {                                  # функция h(a)\n    return((r0[1] + a * dr[1])^2 + 10 * (r0[2] + a * dr[2])^2 - (r0[1] + a * dr[1]) * (r0[2] + a * dr[2]) - (r0[2] + a * dr[2]))\n}\n\nhs = function(a, r0, dr) {                                 # производная функции h(a)\n    return(2 * (dr[1] * (r0[1] + a * dr[1])) + 10 * (2 * (dr[2] * (r0[2] + a * dr[2]))) - (dr[2] * (r0[2] + a * dr[2]) + (r0[1] + a * dr[1]) * dr[2]) - dr[2])\n}\n\nend.rcode-->\n\n<!--begin.rcode echo = FALSE\n\nzs = 0.618                                                 # точка золотого сечения\nzss = 0.382                                                # точка симметричная zs\na = 0                                                      # шаг\nfplot = c()                                                # векторы для графика\naplot = c()\n\nend.rcode-->\n\n<h3>Нахождение минимума встроенной функцией:</h3>\n\n<!--begin.rcode\n\nopt = optimize(h, interval = c(0, 1), r0 = r0, dr = dr, lower = 0.001)\n\nend.rcode-->\n<!--begin.rcode echo = FALSE\n\nopt\n\nend.rcode-->\n\n\n<h3>Нахождение минимума функции методом золотого сечения:</h3>\n\n<!--begin.rcode\n\n# первая итерация - деление отрезка двумя симметричными точками в zss=0.382 и zs=0.618\n\niter = 1\np = hs(zs, r0, dr)\np1 = hs(zss, r0, dr)\nf = h(a, r0, dr)\nfplot[iter] = f\naplot[iter] = a\nif (p > p1 | p < 0) {\n  r0 = r(zss, r0, dr)\n  dr = c(r1[1] - r0[1], r1[2] - r0[2])\n  a = zss\n  l = 1 - zss\n} else {\n  r1 = r(zs, r0, dr)\n  dr = c(r1[1] - r0[1], r1[2] - r0[2])\n}\n\n# последующие итерации - деление отрезка одной точкой в zs=0.618\n\nwhile(TRUE) {\n  iter = iter + 1\n  p = hs(zs, r0, dr)\n  f = h(a, r0, dr)\n  fplot[iter] = f\n  aplot[iter] = a\n  if (abs(p) < e) break\n  if (p > 0) {\n    r1 = r(zs, r0, dr)\n    dr = c(r1[1] - r0[1], r1[2] - r0[2])\n  } else {\n    r0 = r(zs, r0, dr)\n    dr = c(r1[1] - r0[1], r1[2] - r0[2])\n    a = a + (l * zs)\n    l = l - (l * zs)\n  }\n}\n\nend.rcode-->\n\n<h3>Точка минимума функции f:</h3>\n\n<!--begin.rcode echo = FALSE\n\nr = r(a, r0, dr)\nr\n\nend.rcode-->\n\n\n<h3>Точка минимума функции h:</h3>\n\n<!--begin.rcode echo = FALSE\n\na\n\nend.rcode-->\n\n<h3>Значение функции в точке минимума:</h3>\n\n<!--begin.rcode echo = FALSE\n\nfplot[iter]\n\nend.rcode-->\n\n<h3>Производная функции в точке минимума:</h3>\n\n<!--begin.rcode echo = FALSE\n\np\n\nend.rcode-->\n\n<h3>Количество итераций:</h3>\n\n<!--begin.rcode echo = FALSE\n\niter\n\nend.rcode-->\n\n<h3>График зависимости h от a:</h3>\n\n<!--begin.rcode echo = FALSE\n\nggplot() + geom_line(aes(aplot, fplot)) + ylab(\"h(a)\") + xlab(\"a\")\n\nend.rcode-->\n\n</body>\n</html>\n",
    "created" : 1476873198727.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "154941193",
    "id" : "6EDF9B6A",
    "lastKnownWriteTime" : 1476985367,
    "last_content_update" : 1476985367184,
    "path" : "~/Documents/Programs/R/MetOpt/Project_1/Project_1.Rhtml",
    "project_path" : "Project_1.Rhtml",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_html"
}